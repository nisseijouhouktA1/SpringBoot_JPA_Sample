plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	google()
	mavenCentral()
}

//いっちゃん気を付けることとして、レイアウト継承を使いたいとかいう場合にthymeleafだけ依存関係解決できても
//めっちゃ動かないです。
//initializrで色々追加した後に{{{手動}}}でThymeleaf Layout Dialectを追加してください。

//パッケージを追加して依存関係が解決されてJARファイルが見つかったとき

/**
*JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      
      implementationをあれもこれも追加するとXX didn't found required classとか
      そういうメッセージがががーって出てきます。。
      一つ一つ公式のgithub.io等を確認するのが一番ベターな解決アプローチです。(多分なんかが足りない)
    
    application.propertyになるたけそれぞれのパケのデバッグモードをオンにして追加しておいたほうが良いかもです。   
**/

dependencies {
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.4.0'
	implementation 'org.thymeleaf:thymeleaf:3.1.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.1.2'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	implementation 'org.springframework.integration:spring-integration-http'
	implementation 'org.springframework.integration:spring-integration-jdbc'
	implementation 'org.springframework.integration:spring-integration-jpa'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework:spring-webflux'
//	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
